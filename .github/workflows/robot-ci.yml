name: Run Robot Framework Tests

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Robot Framework
        run: pip install robotframework

      - name: Run Robot Framework Tests
        run: |
          robot --outputdir results tests/

      - name: Extract Test Summary
        run: |
          PASSED=$(grep -oP '(?<=pass=")[0-9]+' results/output.xml)
          FAILED=$(grep -oP '(?<=fail=")[0-9]+' results/output.xml)
          SKIPPED=$(grep -oP '(?<=skip=")[0-9]+' results/output.xml)
          echo "PASSED=$PASSED" >> $GITHUB_ENV
          echo "FAILED=$FAILED" >> $GITHUB_ENV
          echo "SKIPPED=$SKIPPED" >> $GITHUB_ENV

      - name: Send notification to Slack
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: "GitHub Actions Bot ü§ñ"
          SLACK_ICON_EMOJI: ":github:"
          SLACK_PAYLOAD: >-
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üöÄ Robot Framework Test Results",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":robot_face: *Workflow:* `${{ github.workflow }}`\nüìå *Status:* `${{ job.status }}`\nüìÇ *Repository:* `${{ github.repository }}`\n\n‚úÖ *Passed:* `${{ env.PASSED }}`\n‚ùå *Failed:* `${{ env.FAILED }}`\n‚ö†Ô∏è *Skipped:* `${{ env.SKIPPED }}`"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "üïí *Triggered by:* `${{ github.actor }}`  |  üñ• *Branch:* `${{ github.ref }}`"
                    }
                  ]
                }
              ]
            }
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
