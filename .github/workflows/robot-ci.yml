name: Run All Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  # ------------------------------------------------
  # 1) Robot Framework Tests
  # ------------------------------------------------
  robot-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Robot Dependencies
        run: |
          pip install --upgrade pip
          pip install -r robotframework/requirements.txt

      - name: Run Robot Framework Tests
        run: |
          robot --outputdir results robotframework/tests/

      - name: Extract Test Summary
        run: |
          sudo apt-get install -y libxml2-utils  # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ xmllint
          PASSED=$(xmllint --xpath "string(//statistics/total/stat[@pass]/@pass)" results/output.xml || echo "0")
          FAILED=$(xmllint --xpath "string(//statistics/total/stat[@fail]/@fail)" results/output.xml || echo "0")
          SKIPPED=$(xmllint --xpath "string(//statistics/total/stat[@skip]/@skip)" results/output.xml || echo "0")
          echo "PASSED=$PASSED" >> $GITHUB_ENV
          echo "FAILED=$FAILED" >> $GITHUB_ENV
          echo "SKIPPED=$SKIPPED" >> $GITHUB_ENV

      - name: Upload Robot Test Results
        uses: actions/upload-artifact@v4
        with:
          name: robot-test-results
          path: results/

      - name: Send notification to Slack (Robot)
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: "GitHub Actions ü§ñ"
          SLACK_ICON_EMOJI: ":robot_face:"
          SLACK_PAYLOAD: >-
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üöÄ Robot Framework Test Results",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":robot_face: *Workflow:* `${{ github.workflow }}`\nüìå *Status:* `${{ job.status }}`\nüîó *Commit:* <https://github.com/${{ github.repository }}/commit/${{ github.sha }}|`${{ github.sha }}`>\nüìÇ *Repository:* `${{ github.repository }}`\n\n‚úÖ *Passed:* `${{ env.PASSED }}`\n‚ùå *Failed:* `${{ env.FAILED }}`\n‚ö†Ô∏è *Skipped:* `${{ env.SKIPPED }}`"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "üïí *Triggered by:* `${{ github.actor }}`  |  üñ• *Branch:* `${{ github.ref }}`"
                    }
                  ]
                }
              ]
            }
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}

  # ------------------------------------------------
  # 2) Cypress Tests
  # ------------------------------------------------
  cypress-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Cypress Dependencies
        run: |
          cd cypress
          npm install

      - name: Run Cypress Tests
        run: |
          cd cypress
          npx cypress run

      - name: Upload Cypress Test Results (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£ generate results ‡πÑ‡∏ß‡πâ)
        uses: actions/upload-artifact@v4
        with:
          name: cypress-test-results
          path: cypress/results/

      - name: Send notification to Slack (Cypress)
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: "GitHub Actions ü§ñ"
          SLACK_ICON_EMOJI: ":robot_face:"
          SLACK_PAYLOAD: '{"text":"Cypress tests finished with status `${{ job.status }}`"}'
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}

  # ------------------------------------------------
  # 3) Playwright Tests
  # ------------------------------------------------
  playwright-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Playwright Dependencies
        run: |
          cd playwright
          npm install

      - name: Run Playwright Tests
        run: |
          cd playwright
          npx playwright test

      - name: Upload Playwright Test Results (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results
          path: playwright/test-results/

      - name: Send notification to Slack (Playwright)
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: "GitHub Actions ü§ñ"
          SLACK_ICON_EMOJI: ":robot_face:"
          SLACK_PAYLOAD: '{"text":"Playwright tests finished with status `${{ job.status }}`"}'
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
